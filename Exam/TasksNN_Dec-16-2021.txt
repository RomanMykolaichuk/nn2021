Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 1
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/cifar10/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 4, Метод оптимізації: Adam)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Learning rate fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 2
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/cifar10/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 4, Метод оптимізації: SGD)
   3.2. Моделі Resnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Learning rate fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 3
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: SGD)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 4
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: Adam)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 5
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/cifar10/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: Adam)
   3.2. Моделі Resnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Learning rate fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 6
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/cifar10/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: Adam)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 7
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: Adam)
   3.2. Моделі Resnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 8
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/cifar10/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: SGD)
   3.2. Моделі Resnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 9
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 4, Метод оптимізації: SGD)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 10
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 4, Метод оптимізації: Adam)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 11
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/cifar10/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: SGD)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Pretrained model fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 12
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 4, Метод оптимізації: Adam)
   3.2. Моделі Resnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Learning rate fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

Практичне завдання з дисципліни
Нейронні мережі
ВАРІАНТ № 13
Завдання:
Розробити Jupyter Notebook для вирішення завдання класифікації
на основі наборів даних:
#1 - https://keras.io/api/datasets/mnist/

#2 - https://drive.google.com/drive/folders/15MdqvRMl8YPFCbemyiLdUcX5SL4A5mx2?usp=sharing

Забезпечити виконання наступних етапів:
1. Завантаження та попередній аналіз даних.
2. Вирішення завдання класифікації для набору даних #1 з використанням Feed-forward NN.
2+.(для отримання оцінки "добре") +CNN.
3. Вирішення завдання класифікації для набору даних #2 з використанням:
   3.1. CNN (Кількість фільтрів: 5, Метод оптимізації: SGD)
   3.2. Моделі Efficientnet репозиторію Tensorflow Hub
4.(для отримання оцінки "відмінно", за умови виконання п.2+) 
    Здійснити точне настроювання моделі 3.2 з використанням: Learning rate fine-tuning           
5. Графічне відображення тренування моделей.
6. Порівняння отриманих результатів для набору даних #2.
7. Висновки.

Структура звітного документу:
Заголовок роботи (Markdown: П.І.Б., група, назва роботи (Практичне завдання іспиту з дисципліни...), дата складання.)
Етапи роботи (Номер та назва етапу (частини етапу),  код з коментарями.)

Використати технології: Tensorflow, Google Colab.
Результати викласти у форматі [your_surname].ipynb у папку Exam репозиторію GitHub.
----------------------------------------------------------------------------------------

